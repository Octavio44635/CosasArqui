null equ -1
<prototipo>
push <nodo**>
call invierte
add sp, 4
-------------

invierte:
	push bp
	mov bp,sp
	
	push ecx;nodo actual
	push ebx;nodo anterior

	mov ebx, [bp+8]
	mov ecx, [ebx+sig]
	
	push [ebx+8]
	push ebx
	push ecx
	call recursiva
	add sp, 8
fin:
	pop ecx
	pop ebx
	mov sp, bp
	pop bp
	ret
--------------

recursiva:
	push bp
	mov bp, sp
	
	mov ebx, [bp+12]
	mov ecx, [bp+8]
	
	cmp ebx, null
	JZ fin

	push [bp+16]
	push [ebx+sig]
	push ebx
	call recursiva
	add sp, 12
	
	cmp [ebx+sig], null
	JZ cambiaCabeza
	JNZ cambiaPunteros

cambiaCabeza:
	mov [bp+16], ebx
	JMP fin
cambiaPunteros:
	mov [ecx+sig], [ebx+sig]
	JMP fin
fin:
	add sp,8
	pop ebx
	mov sp, bp
	pop bp
	ret
	
##############
	
	