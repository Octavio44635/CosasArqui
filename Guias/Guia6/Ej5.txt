a. crear nodo
funcion(nodo**, int valor);

<prototipo>
push <valor>
call creanodo
add sp, 4

-----------------

creanodo:
	push bp
	mov bp, sp
	
	push 8; sizeof(valor) + sizeof(sig)
	call alloc
	add sp, 4;eax tiene el puntero al nodo nuevo
	
	mov [eax], [bp+8];y esto ni siquiera es del todo necesario, pero ya que lo crea que le de valor
	mov [eax+sig], null
	
	mov sp,bp
	pop bp
	ret
#################

b. inserta ordenado
null equ -1
<prototipo>
push <valor>
push <nodo **>
call insertaOrd
add sp,8

-------------------

insertaOrd:
	push bp
	mov bp, sp
	
	push [bp+12]
	call creanodo; eax Almacena el puntero al nodo nuevo
	add sp, 4

	push ebx; Almacena el puntero a los nodos de la lista ppal	
	mov ebx, [bp+8]
	
comparaciones: 
	cmp ebx, null
	JZ insertaCabeza
	cmp [ebx+valor], [eax+valor]
	JN insertaCabeza
	JNN insertaNormal
	
insertaCabeza: 
	mov [eax+sig], [ebx]
	mov ebx, eax
	JMP fin
insertaNormal:
	mov [eax+sig], [ebx+sig]
	mov [ebx+sig], eax
	JMP fin
fin:
	pop ebx
	mov sp, bp
	pop bp
	ret
	
###################
c. remover nodo con valor pasado por parametro
null equ -1
<prototipo>
push <valor>
push <nodo **>
call eliminaNodo
add sp,8
------------------

eliminaNodo:
	push bp
	mov bp, sp
	
	push ebx
	push ecx

	mov ecx, null; auxiliar
	mov ebx, [bp+8]; nodo 
	
comparacion:
	cmp ebx, null
	JZ fin
	cmp [ebx], [bp+12]
	JZ elimina
	mov ecx, ebx;pasa a ecx al siguiente (ebx)
	mov ebx, [ebx+sig]; pasa ebx al siguiente	
	JMP comparacion
elimina:
	mov [ecx+sig], [ebx+sig]
	mov ecx, ebx
	mov ebx, [ebx+sig]
	JMP fin
;Deja al ecx colgando en el nodo que se retiro, no se como eliminarlo. Deberia buscar su lugar en el ES?
fin:
	pop ecx
	pop ebx
	mov sp,bp
	pop bp
	ret

	
#####################

e. imprime lista
null equ -1
<prototipo>
push <nodo **>
call imprime
add sp,4

--------------------
imprime:
	push bp
	mov bp, sp
	
	push eax
	push ebx; registro para moverse por la lista
	push ecx
	push edx
	
	mov ebx, [bp+8]
ciclo:
	cmp ebx, null
	JZ fin
	JMP escribe
escribe:
	mov edx, [ebx]
	mov eax, 2
	mov ecx, 0x0401
	sys 2
	JMP ciclo
fin:
	pop eax
	pop ebx
	pop ecx
	pop edx
	mov sp,bp
	pop bp
	ret
	

	



	
