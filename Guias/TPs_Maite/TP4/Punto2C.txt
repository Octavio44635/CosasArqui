PROTOTIPO SCMP
PUSH <*char 1>
PUSH <*char 2>
CALL scmp
ADD sp, 8
; devuelve en EAX un int

                   terminator equ 0
scmp:              PUSH bp
                   MOV bp, sp
                   PUSH ebx
                   PUSH ecx

                   MOV ebx, [bp + 8]   ; *char 2
                   MOV ecx, [bp + 12]  ; *char 1
                   MOV eax, [ecx]
                   SUB eax, [ebx]

                   CMP eax, 0          ; caso de que los caracteres no son iguales
                   JNZ scmp_fin  

                   CMP [ebx], terminator ; caso de que ambos hayan llegado al final
                   JZ scmp_fin

                   ; si son iguales hasta ahora y no termino, vuelvo a llamar
                   ADD ebx, 4          ; apunto a siguiente caracter
                   ADD ecx, 4          ; apunto a siguiente caracter

                   PUSH ecx
                   PUSH ebx
                   CALL scmp
                   ADD sp, 8

scmp_fin:          POP ecx
                   POP ebx
                   MOV sp, bp
                   POP bp
                   RET
                   